# docker‑compose.yml
# ------------------------------------------------------------
# Project‑scoped name → resulting containers will be
#   echo_db_1, echo_backend_1, echo_frontend_1, …
name: echo

services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER:  postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB:  echodb
    volumes:
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5434:5434"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks: [echo_net]

  backend:
    build:
      context: ./be
      dockerfile: Dockerfile
    # no container_name → Dev Containers can create/attach safely
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "5001:5001"
    env_file:
      - .env                     # inherit secrets / API keys
    environment:                # defaults; can be overriden from .env
      DB_HOST: db
      DB_USER: postgres
      DB_PASS: postgres
      DB_NAME: echodb
      DB_PORT: 5432
      GPT_API_KEY: ${GPT_API_KEY}
      GITHUB_CLIENT_ID: ${GITHUB_CLIENT_ID}
      GITHUB_CLIENT_SECRET: ${GITHUB_CLIENT_SECRET}
      JWT_SECRET: ${JWT_SECRET}
      FRONTEND_URL: ${FRONTEND_URL}
      PORT: ${PORT:-5001}
    networks: [echo_net]

  frontend:
    build:
      context: ./fe
      dockerfile: Dockerfile
    depends_on: [backend]
    ports:
      - "5173:5173"
    environment:
      VITE_API_BASE_URL: "http://localhost:5001"
    volumes:
      - ./fe:/app          # live‑reload in local dev
      - /app/node_modules  # keep node_modules inside container
    networks: [echo_net]

networks:
  echo_net:
    driver: bridge
